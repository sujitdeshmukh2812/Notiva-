rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Only admins can create, update, or delete courses, years, semesters, and subjects
    match /courses/{courseId} {
      allow read: if true;
      allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.is_admin == true;
    }

    match /years/{yearId} {
      allow read: if true;
      allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.is_admin == true;
    }

    match /semesters/{semesterId} {
      allow read: if true;
      allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.is_admin == true;
    }

    match /subjects/{subjectId} {
      allow read: if true;
      allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.is_admin == true;
    }

    // Materials can be read by anyone if approved, created by any authenticated user, and updated/deleted only by admins
    match /materials/{materialId} {
      allow read: if resource.data.status == 'approved';
      allow create: if request.auth != null;
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.is_admin == true;
    }

    // Ratings can be created and updated by authenticated users, but only deleted by admins
    match /ratings/{ratingId} {
      allow read: if true;
      allow create, update: if request.auth != null;
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.is_admin == true;
    }

    // Bookmarks can be created and deleted by the user who owns them
    match /bookmarks/{bookmarkId} {
      allow read, create, delete: if request.auth.uid == resource.data.user_id;
    }

    // Notifications can only be read and updated by the user who owns them
    match /notifications/{notificationId} {
      allow read, update: if request.auth.uid == resource.data.user_id;
    }

    // Doubts can be created by any authenticated user, and updated/deleted only by admins
    match /doubts/{doubtId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.is_admin == true;
    }

    // Ads can be read by anyone, but only created, updated, and deleted by admins
    match /ads/{adId} {
      allow read: if true;
      allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.is_admin == true;
    }
  }
}
