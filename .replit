modules = ["web", "python-3.11", "nodejs-20", "nix"]
run = "python main.py"

[nix]
channel = "stable-25_05"
packages = ["openssl", "postgresql", "python311", "python311Packages.click", "python311Packages.flask", "python311Packages.flask-login", "python311Packages.flask-sqlalchemy", "python311Packages.gunicorn", "python311Packages.itsdangerous", "python311Packages.jinja2", "python311Packages.openai", "python311Packages.pip", "python311Packages.python-decouple", "python311Packages.python-dotenv", "python311Packages.sqlalchemy", "python311Packages.werkzeug", "python311Packages.whitenoise"]

[deployment]
deploymentTarget = "autoscale"
run = ["gunicorn", "--bind", "0.0.0.0:5000", "main:app"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 --reuse-port --reload main:app"
waitForPort = 5000

[[ports]]
localPort = 5000
externalPort = 80
